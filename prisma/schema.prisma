generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  role String @default("BUYER")
  tokens Token[]
  cart Cart[]
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId String
  refreshToken String
  ip String
  expiresAt DateTime?
  userAgent String
  isValid Boolean
  createdAt DateTime @default(now())
}

model Category {
  id Int @id @default(autoincrement())
  title String
  description String
  href String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())
  name String
  price Float
  image String
  bestSelling Boolean @default(false)
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  cart Cart[]
  orderItems OrderItems[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())
  product Product @relation(fields: [productId], references: [id])
  productId Int
  user User @relation(fields: [userId], references: [id])
  userId String
  quantity Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, productId])
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId String 
  totalPrice Float
  paymentId String
  status OrderStatus @default(PENDING)
  orderItems OrderItems[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItems {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  priceAtTime Float
  quantity Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}